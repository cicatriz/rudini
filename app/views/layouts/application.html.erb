<!DOCTYPE html>
<html>
  <head>
    <title>Learnstream Rudinium</title>
    <%= stylesheet_link_tag    :application %>
    <%= javascript_include_tag "application" %>

    <script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
    <script type="text/x-mathjax-config">
      MathJax.Hub.Config({
        tex2jax: {
          inlineMath: [ ['$','$'], ["\\(","\\)"] ],
          displayMath: [ ['$$','$$'], ["\\[","\\]"] ],
          processEscapes: true
        }
      });
    </script>

    <%= csrf_meta_tags %>
  </head>
  <body>
    <div class="navbar navbar-fixed-top">
      <div class="navbar-inner">
        <div class="container">
          <div class="row">
            <div class="span12">
              <a class="brand" href="/#">Learnstream<%= image_tag "rudinium.png", :style => 'height: 20px; margin: 0 5px 0 5px;' %></a>
              <div class="nav-collapse">
                <ul class="nav">
                  <li><%= link_to "Koans", "/#koans" %></li>
                  <li><%= link_to "Lectures", "/#/lectures" %></li>
                  <% if current_user %>
                    <li><a href="/#/study">Study <sup><span class="label label-warning" id="study-nav-due" style="font-size: .8em;"><%= current_user.due_memories.count %></span></sup></a></li>
                    <li id="user-account" data-auth="logged_in"><%= link_to 'Account', edit_user_registration_path %></li>
                    <li><%= link_to 'Logout', destroy_user_session_path, :method => :delete %></li>
                  <% else %>
                    <li><%= link_to 'Login', new_user_session_path %></li>
                    <li><%= link_to 'Sign up', new_user_registration_path %></li>
                  <% end %>
                  <li><%= link_to "Help", "/#/help" %></li>
                </ul>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div class="container">
    <!-- <div class="row">
      <div class="span12" id="alert-content">
        <p><%= notice %></p>
        <p><%= alert %></p>
      </div>
    </div> -->
    <div id="main-content">
      <%= yield %>
    </div>
  </div>
  <script>
// 2. This code loads the IFrame Player API code asynchronously.
  var tag = document.createElement('script');

  tag.src = "//www.youtube.com/iframe_api";
  var firstScriptTag = document.getElementsByTagName('script')[0];
  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

  // 3. This function creates an <iframe> (and YouTube player)
  //    after the API code downloads.
  var player;
  function onYouTubeIframeAPIReady() {
    player = new YT.Player('video', {
    events: {
    'onReady': onPlayerReady,
    'onStateChange': onPlayerStateChange
  }
  });
}
  </script>
</body>
</html>
